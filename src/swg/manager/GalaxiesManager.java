package swg.manager;


import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import static java.lang.System.out;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author adamwitt
 */
public class GalaxiesManager extends javax.swing.JFrame {

    /**
     * Creates new form GalaxiesManager
     */
    public GalaxiesManager() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        optionsWindow = new javax.swing.JDialog();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        planetsButton = new javax.swing.JButton();
        toolsButton = new javax.swing.JButton();
        oracleWindow = new javax.swing.JDialog();
        jScrollPane4 = new javax.swing.JScrollPane();
        OracleStatus = new javax.swing.JTextArea();
        restartOracle = new javax.swing.JButton();
        launchSQLD = new javax.swing.JButton();
        closeOracle = new javax.swing.JButton();
        scriptsWindow = new javax.swing.JDialog();
        closeScripts = new javax.swing.JButton();
        planetsWindow = new javax.swing.JDialog();
        tutorialCheckBox = new javax.swing.JCheckBox();
        savePlanetsButton = new javax.swing.JButton();
        StartLogin = new javax.swing.JButton();
        NMElabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        StartChat = new javax.swing.JButton();
        StartGame = new javax.swing.JButton();
        KillAll = new javax.swing.JButton();
        OptionsButton = new javax.swing.JButton();
        Scripts = new javax.swing.JButton();
        OracleButton = new javax.swing.JButton();
        KillGame = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        Refresh = new javax.swing.JButton();
        clearLogs = new javax.swing.JButton();

        optionsWindow.setTitle("Options");
        optionsWindow.setBounds(new java.awt.Rectangle(150, 150, 750, 400));

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        planetsButton.setText("Planets");
        planetsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planetsButtonActionPerformed(evt);
            }
        });

        toolsButton.setText("Tools");
        toolsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionsWindowLayout = new javax.swing.GroupLayout(optionsWindow.getContentPane());
        optionsWindow.getContentPane().setLayout(optionsWindowLayout);
        optionsWindowLayout.setHorizontalGroup(
            optionsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsWindowLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(optionsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(optionsWindowLayout.createSequentialGroup()
                        .addComponent(toolsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 294, Short.MAX_VALUE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(optionsWindowLayout.createSequentialGroup()
                        .addComponent(planetsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        optionsWindowLayout.setVerticalGroup(
            optionsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsWindowLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(planetsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 286, Short.MAX_VALUE)
                .addGroup(optionsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toolsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        oracleWindow.setTitle("Oracle");
        oracleWindow.setAlwaysOnTop(true);
        oracleWindow.setBounds(new java.awt.Rectangle(150, 150, 750, 400));

        OracleStatus.setEditable(false);
        OracleStatus.setColumns(20);
        OracleStatus.setRows(5);
        jScrollPane4.setViewportView(OracleStatus);

        restartOracle.setText("Restart Oracle");
        restartOracle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartOracleActionPerformed(evt);
            }
        });

        launchSQLD.setText("Launch SQL-D");
        launchSQLD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchSQLDActionPerformed(evt);
            }
        });

        closeOracle.setText("Close");
        closeOracle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeOracleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout oracleWindowLayout = new javax.swing.GroupLayout(oracleWindow.getContentPane());
        oracleWindow.getContentPane().setLayout(oracleWindowLayout);
        oracleWindowLayout.setHorizontalGroup(
            oracleWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oracleWindowLayout.createSequentialGroup()
                .addGroup(oracleWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(oracleWindowLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(restartOracle, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                    .addComponent(closeOracle, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                    .addComponent(launchSQLD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        oracleWindowLayout.setVerticalGroup(
            oracleWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, oracleWindowLayout.createSequentialGroup()
                .addGroup(oracleWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(oracleWindowLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(restartOracle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(launchSQLD, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 238, Short.MAX_VALUE)
                        .addComponent(closeOracle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(oracleWindowLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4)))
                .addContainerGap())
        );

        scriptsWindow.setTitle("Scripts");
        scriptsWindow.setBounds(new java.awt.Rectangle(150, 150, 750, 400));

        closeScripts.setText("Close");
        closeScripts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeScriptsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout scriptsWindowLayout = new javax.swing.GroupLayout(scriptsWindow.getContentPane());
        scriptsWindow.getContentPane().setLayout(scriptsWindowLayout);
        scriptsWindowLayout.setHorizontalGroup(
            scriptsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scriptsWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(closeScripts, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addGap(546, 546, 546))
        );
        scriptsWindowLayout.setVerticalGroup(
            scriptsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scriptsWindowLayout.createSequentialGroup()
                .addContainerGap(430, Short.MAX_VALUE)
                .addComponent(closeScripts, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        planetsWindow.setBounds(new java.awt.Rectangle(175, 175, 750, 400));

        tutorialCheckBox.setText("Tutorial");

        savePlanetsButton.setText("Save");
        savePlanetsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePlanetsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout planetsWindowLayout = new javax.swing.GroupLayout(planetsWindow.getContentPane());
        planetsWindow.getContentPane().setLayout(planetsWindowLayout);
        planetsWindowLayout.setHorizontalGroup(
            planetsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(planetsWindowLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(tutorialCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(557, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, planetsWindowLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(savePlanetsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        planetsWindowLayout.setVerticalGroup(
            planetsWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(planetsWindowLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(tutorialCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 305, Short.MAX_VALUE)
                .addComponent(savePlanetsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NME Galaxies Manager");
        setBounds(new java.awt.Rectangle(100, 100, 0, 0));

        StartLogin.setText("Start Login Server");
        StartLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartLoginActionPerformed(evt);
            }
        });

        NMElabel.setFont(new java.awt.Font("Myanmar MN", 0, 22)); // NOI18N
        NMElabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NMElabel.setText("NoMercyEver");

        jLabel2.setText("jLabel1");

        StartChat.setText("Start Chat Server");
        StartChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartChatActionPerformed(evt);
            }
        });

        StartGame.setText("Start Game Server");
        StartGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartGameActionPerformed(evt);
            }
        });

        KillAll.setText("Kill All Servers");
        KillAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KillAllActionPerformed(evt);
            }
        });

        OptionsButton.setText("Options");
        OptionsButton.setBounds(new java.awt.Rectangle(150, 150, 750, 400));
        OptionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OptionsButtonActionPerformed(evt);
            }
        });

        Scripts.setText("Scripts");
        Scripts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScriptsActionPerformed(evt);
            }
        });

        OracleButton.setText("Oracle");
        OracleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OracleButtonActionPerformed(evt);
            }
        });

        KillGame.setText("Kill Game Server");
        KillGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KillGameActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setToolTipText("Login Server");
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setToolTipText("Chat Server");
        jScrollPane2.setViewportView(jTextArea2);

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.setToolTipText("Game Server");
        jScrollPane3.setViewportView(jTextArea3);

        Refresh.setText("Refresh");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        clearLogs.setText("Clear Logs");
        clearLogs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearLogsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StartChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NMElabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(StartLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(StartGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(KillAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(OptionsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Scripts, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(OracleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(KillGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(clearLogs, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Refresh)
                    .addComponent(clearLogs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(NMElabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(StartChat, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StartLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StartGame, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(OracleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OptionsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Scripts, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(KillGame, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(KillAll, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartLoginActionPerformed
        try {
            // TODO add your handling code here:
            Runtime rt = Runtime.getRuntime();
            String[] commands = {"bash","/home/swg/swg-main/nme/scripts/./nohupLogin.sh"};
            Process proc = rt.exec(commands);
            
            BufferedReader stdInput = new BufferedReader(new
             InputStreamReader(proc.getInputStream()));
            
            BufferedReader stdError = new BufferedReader(new
             InputStreamReader(proc.getErrorStream()));
            
            
// read the output from the command
System.out.println("Login Server Started...\n");
jTextArea1.read(new FileReader("/home/swg/swg-main/nme/logsstartLogin.txt"), "blah");
String s = null;
String line = "";
String output = "";
while ((s = stdInput.readLine()) != null) {
    output += line + "\n";
    System.out.println(s);
    
    
   
}

// read any errors from the attempted command
//System.out.println("Here is the standard error of the command (if any):\n");
while ((s = stdError.readLine()) != null) {
    System.out.println(s);
}       } catch (IOException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_StartLoginActionPerformed

    private void StartChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartChatActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Runtime rt = Runtime.getRuntime();
            String[] commands = {"bash","/home/swg/swg-main/nme/scripts/./nohupChat.sh"};
            Process proc = rt.exec(commands);
            
            BufferedReader stdInput = new BufferedReader(new
             InputStreamReader(proc.getInputStream()));
            
            BufferedReader stdError = new BufferedReader(new
             InputStreamReader(proc.getErrorStream()));
            
            
// read the output from the command
System.out.println("Chat Server Started...\n");
jTextArea2.read(new FileReader("/home/swg/swg-main/nme/logs/startChat.txt"), "blah");
String s = null;
String line = "";
String output = "";
while ((s = stdInput.readLine()) != null) {
    output += line + "\n";
    System.out.println(s);
    
    
   
}

// read any errors from the attempted command
//System.out.println("Here is the standard error of the command (if any):\n");
while ((s = stdError.readLine()) != null) {
    System.out.println(s);
}       } catch (IOException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_StartChatActionPerformed

    private void StartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGameActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Runtime rt = Runtime.getRuntime();
            String[] commands = {"bash","/home/swg/swg-main/nme/scripts/./nohupStart.sh"};
            Process proc = rt.exec(commands);
            
            BufferedReader stdInput = new BufferedReader(new
             InputStreamReader(proc.getInputStream()));
            
            BufferedReader stdError = new BufferedReader(new
             InputStreamReader(proc.getErrorStream()));
            
            
// read the output from the command
System.out.println("Game Server Started...\n");
jTextArea3.read(new FileReader("/home/swg/swg-main/nme/logs/startServer.txt"), "blah");
String s = null;
String line = "";
String output = "";
while ((s = stdInput.readLine()) != null) {
    output += line + "\n";
    System.out.println(s);
    
    
   
}

// read any errors from the attempted command
//System.out.println("Here is the standard error of the command (if any):\n");
while ((s = stdError.readLine()) != null) {
    System.out.println(s);
}       } catch (IOException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_StartGameActionPerformed

    private void OracleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OracleButtonActionPerformed
        // TODO add your handling code here:
        oracleWindow.setVisible(true);
        try {
            // TODO add your handling code here:
            Runtime rt = Runtime.getRuntime();
            String[] commands = {"bash","/home/swg/swg-main/nme/scripts/./oracleStatus.sh"};
            Process proc = rt.exec(commands);
            
            BufferedReader stdInput = new BufferedReader(new
             InputStreamReader(proc.getInputStream()));
            
            BufferedReader stdError = new BufferedReader(new
             InputStreamReader(proc.getErrorStream()));
            
            
// read the output from the command
System.out.println("Oracle Status Request...\n");
OracleStatus.read(new FileReader("/home/swg/swg-main/nme/logs/oracleStatus.txt"), "blah");
String s = null;
String line = "";
String output = "";
while ((s = stdInput.readLine()) != null) {
    output += line + "\n";
    System.out.println(s);
    
    
   
}

// read any errors from the attempted command
//System.out.println("Here is the standard error of the command (if any):\n");
while ((s = stdError.readLine()) != null) {
    System.out.println(s);
}       } catch (IOException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_OracleButtonActionPerformed

    private void OptionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OptionsButtonActionPerformed
        // TODO add your handling code here:\
        optionsWindow.setVisible(true);
    }//GEN-LAST:event_OptionsButtonActionPerformed

    private void ScriptsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScriptsActionPerformed
        // TODO add your handling code here:
        scriptsWindow.setVisible(true);
    }//GEN-LAST:event_ScriptsActionPerformed

    private void KillGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KillGameActionPerformed
        // TODO add your handling code here:
                try {
            // TODO add your handling code here:
            Runtime rt = Runtime.getRuntime();
            String[] commands = {"bash","/home/swg/swg-main/nme/scripts/./killGame.sh", "&"};
            Process proc = rt.exec(commands);
            
            BufferedReader stdInput = new BufferedReader(new
             InputStreamReader(proc.getInputStream()));
            
            BufferedReader stdError = new BufferedReader(new
             InputStreamReader(proc.getErrorStream()));
            
// read the output from the command
System.out.println("Game Server Closed...\n");
String s = null;
String line = "";
String output = "";
while ((s = stdInput.readLine()) != null) {
    output += line + "\n";
    System.out.println(s);
    
    jTextArea3.setText("");
   
    jTextArea3.append(s);
   
}

// read any errors from the attempted command
//System.out.println("Here is the standard error of the command (if any):\n");
while ((s = stdError.readLine()) != null) {
    System.out.println(s);
}       } catch (IOException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_KillGameActionPerformed

    private void KillAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KillAllActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Runtime rt = Runtime.getRuntime();
            String[] commands = {"bash","/home/swg/swg-main/nme/scripts/./killServers.sh", "&"};
            Process proc = rt.exec(commands);
            
            BufferedReader stdInput = new BufferedReader(new
             InputStreamReader(proc.getInputStream()));
            
            BufferedReader stdError = new BufferedReader(new
             InputStreamReader(proc.getErrorStream()));
            
// read the output from the command
System.out.println("All Servers Closed...\n");
String s = null;
String line = "";
String output = "";
while ((s = stdInput.readLine()) != null) {
    output += line + "\n";
    System.out.println(s);
    jTextArea1.setText("");
    jTextArea2.setText("");
    jTextArea3.setText("");
    jTextArea1.append(s);
    jTextArea2.append(s);
    jTextArea3.append(s);
   
}

// read any errors from the attempted command
//System.out.println("Here is the standard error of the command (if any):\n");
while ((s = stdError.readLine()) != null) {
    System.out.println(s);
}       } catch (IOException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_KillAllActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        optionsWindow.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        try {
            jTextArea1.read(new FileReader("/home/swg/swg-main/nme/logs/startLogin.txt"), "blah");
            jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength() - 1);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            jTextArea2.read(new FileReader("/home/swg/swg-main/nme/logs/startChat.txt"), "blah");
            jTextArea2.setCaretPosition(jTextArea2.getDocument().getLength() - 1);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            jTextArea3.read(new FileReader("/home/swg/swg-main/nme/logs/startServer.txt"), "blah");
            jTextArea3.setCaretPosition(jTextArea3.getDocument().getLength() - 1);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RefreshActionPerformed

    private void clearLogsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearLogsActionPerformed
        try {
            // TODO add your handling code here:
            Runtime rt = Runtime.getRuntime();
            String[] commands = {"bash","/home/swg/swg-main/nme/scripts/./clearLogs.sh", "&"};
            Process proc = rt.exec(commands);
        } catch (IOException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_clearLogsActionPerformed

    private void restartOracleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartOracleActionPerformed
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:
            Runtime rt = Runtime.getRuntime();
            String[] commands = {"systemctl","restart","oracle"};
            Process proc = rt.exec(commands);
        } catch (IOException ex) {
            Logger.getLogger(GalaxiesManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_restartOracleActionPerformed

    private void launchSQLDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchSQLDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_launchSQLDActionPerformed

    private void closeOracleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeOracleActionPerformed
        // TODO add your handling code here:
        oracleWindow.setVisible(false);
    }//GEN-LAST:event_closeOracleActionPerformed

    private void closeScriptsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeScriptsActionPerformed
        // TODO add your handling code here:
        scriptsWindow.setVisible(false);
    }//GEN-LAST:event_closeScriptsActionPerformed

    private void planetsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planetsButtonActionPerformed
        // TODO add your handling code here:
        planetsWindow.setVisible(true);
    }//GEN-LAST:event_planetsButtonActionPerformed

    private void savePlanetsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePlanetsButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_savePlanetsButtonActionPerformed

    private void toolsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolsButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toolsButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GalaxiesManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GalaxiesManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GalaxiesManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GalaxiesManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GalaxiesManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton KillAll;
    private javax.swing.JButton KillGame;
    private javax.swing.JLabel NMElabel;
    private javax.swing.JButton OptionsButton;
    private javax.swing.JButton OracleButton;
    private javax.swing.JTextArea OracleStatus;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton Scripts;
    private javax.swing.JButton StartChat;
    private javax.swing.JButton StartGame;
    private javax.swing.JButton StartLogin;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton clearLogs;
    private javax.swing.JButton closeOracle;
    private javax.swing.JButton closeScripts;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JButton launchSQLD;
    private javax.swing.JDialog optionsWindow;
    private javax.swing.JDialog oracleWindow;
    private javax.swing.JButton planetsButton;
    private javax.swing.JDialog planetsWindow;
    private javax.swing.JButton restartOracle;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton savePlanetsButton;
    private javax.swing.JDialog scriptsWindow;
    private javax.swing.JButton toolsButton;
    private javax.swing.JCheckBox tutorialCheckBox;
    // End of variables declaration//GEN-END:variables
}
